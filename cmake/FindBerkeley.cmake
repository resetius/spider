if (Berkeley_FOUND)
	return ()
endif ()

if (WIN32)
	if (CMAKE_CXX_SIZEOF_DATA_PTR EQUAL 8)
		set(WIN64 TRUE)
	endif ()
	if (NOT Berkeley_ROOT)
		message(FATAL_ERROR "set Berkeley_ROOT !")
		return ()
	endif ()
	find_path (Berkeley_INCLUDE_PATH db_cxx.h PATHS ${Berkeley_ROOT}/build_windows)

	if (WIN64)
		find_library(Berkeley_LIBRARY_RELEASE libdb52s PATHS "${Berkeley_ROOT}/build_windows/x64/Static Release")
		find_library(Berkeley_LIBRARY_DEBUG libdb52sd PATHS "${Berkeley_ROOT}/build_windows/x64/Static Debug")
	else ()
		find_library(Berkeley_LIBRARY_RELEASE libdb52s PATHS "${Berkeley_ROOT}/build_windows/Win32/Static Release")
		find_library(Berkeley_LIBRARY_DEBUG libdb52sd PATHS "${Berkeley_ROOT}/build_windows/Win32/Static Debug")
	endif ()

	if (Berkeley_LIBRARY_RELEASE AND Berkeley_LIBRARY_DEBUG)
		set(Berkeley_LIBRARY debug;${Berkeley_LIBRARY_DEBUG};optimized;${Berkeley_LIBRARY_RELEASE})
	endif ()
else ()
	if (NOT Berkeley_INCLUDE_PATH)
		find_path (Berkeley_INCLUDE_PATH db_cxx.h PATHS /usr/include/db4 ENV INCLUDE)
	endif ()

	find_library(Berkeley_LIBRARY db_cxx)
endif ()

if (Berkeley_INCLUDE_PATH AND Berkeley_LIBRARY)
	message (STATUS "Berkeley include path: ${Berkeley_INCLUDE_PATH}")
	message (STATUS "Berkeley library: ${Berkeley_LIBRARY}")
else ()
	if (Berkeley_FIND_REQUIRED)
		message(FATAL_ERROR "Berkeley not found")
	endif ()
endif ()
